image: docker:20.10.16

stages:
  - test
  - build
  - deploy

services:
  - docker:20.10.16-dind

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"

before_script:
  - docker info
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_TOKEN $CI_REGISTRY

build:dev:
  stage: build
  script:
    - docker build --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:dev .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:dev

  only:
    - dev

deploy:dev:
  stage: deploy
  dependencies:
    - build:dev
  environment:
    name: development
    url: https://dev.modflow.inowas.com
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh -t root@dev.modflow.inowas.com 'cd /srv/docker/dev.modflow.inowas.com &&
      docker-compose -f docker-compose.dev.yml down &&
      docker-compose -f docker-compose.dev.yml pull &&
      docker-compose -f docker-compose.dev.yml up -d --force-recreate &&
      docker-compose -f docker-compose.dev.yml ps &&
      docker system prune -f'

  only:
    - dev

build:production:
  stage: build
  script:
    - docker build --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest

  only:
    - master

deploy:production:
  stage: deploy
  dependencies:
    - build:production
  environment:
    name: production
    url: https://modflow.inowas.com
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh -t root@modflow.inowas.com 'cd /srv/docker/modflow.inowas.com &&
      docker-compose down &&
      docker-compose pull &&
      docker-compose up -d --force-recreate &&
      docker-compose ps &&
      docker system prune -f'
      
  only:
    - master
